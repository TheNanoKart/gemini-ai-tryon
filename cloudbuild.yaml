# cloudbuild.yaml

# This file defines the steps for Google Cloud Build to create a CI/CD pipeline.
# It will build your Docker image, push it to Google Artifact Registry,
# and deploy it to Google Cloud Run.

steps:
  # Step 1: Build the Docker image
  # Uses the 'cloud-builders/docker' builder to build the image from the Dockerfile in the current directory.
  # The image is tagged with the current commit SHA for unique identification and 'latest' for convenience.
  # It will be pushed to Google Artifact Registry.
  - name: 'gcr.io/cloud-builders/docker'
    id: Build
    args:
      - 'build'
      - '-t'
      - 'asia-south1-docker.pkg.dev/tnk-ai-modelling/tryon-repo/gemini-tryon-app:$COMMIT_SHA'
      - '-t'
      - 'asia-south1-docker.pkg.dev/tnk-ai-modelling/tryon-repo/gemini-tryon-app:latest'
      - '.'
    # The image name specifies the Artifact Registry repository (tryon-repo)
    # and the image name (gemini-tryon-app).

  # Step 2: Push the Docker image to Google Artifact Registry
  # Pushes both the commit SHA tagged image and the 'latest' tagged image.
  - name: 'gcr.io/cloud-builders/docker'
    id: Push
    args:
      - 'push'
      - 'asia-south1-docker.pkg.dev/tnk-ai-modelling/tryon-repo/gemini-tryon-app:$COMMIT_SHA'

  # Step 3: Deploy the image to Google Cloud Run
  # Uses the 'cloud-builders/gcloud' builder to deploy the service.
  # Substitutions like tnk-ai-modelling and $COMMIT_SHA are automatically provided by Cloud Build.
  - name: 'gcr.io/google.com/cloudsdk/cloud-sdk'
    id: Deploy
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'gemini-tryon-service' # Name of your Cloud Run service
      - '--image'
      - 'asia-south1-docker.pkg.dev/tnk-ai-modelling/tryon-repo/gemini-tryon-app:$COMMIT_SHA'
      - '--region'
      - 'asia-south1' # Choose an appropriate GCP region (e.g., us-central1, europe-west1, asia-south1)
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated' # Temporarily allow unauthenticated for API Gateway to reach it.
                                 # API Gateway will handle authentication.
      - '--set-env-vars=GOOGLE_API_KEY_SECRET_NAME=gemini-api-key-secret' # Secret Manager secret name
                                                                          # This will be used in app.py to fetch the key.
      - '--update-secrets=GOOGLE_API_KEY=gemini-api-key-secret:latest' # Mount the secret as an environment variable
      - '--memory'
      - '1Gi' # Allocate 1 GB of memory
      - '--cpu'
      - '1' # Allocate 1 CPU
      - '--timeout'
      - '300s' # 5-minute timeout for requests
      - '--max-instances'
      - '3' # Maximum number of instances for scaling

# Specify a service account with necessary permissions for Cloud Build.
# This service account needs permissions to:
# - Cloud Build Service Account (roles/cloudbuild.builds.builder)
# - Cloud Run Admin (roles/run.admin)
# - Artifact Registry Writer (roles/artifactregistry.writer)
# - Secret Manager Secret Accessor (roles/secretmanager.secretAccessor)
serviceAccount: 28146163990@cloudbuild.gserviceaccount.com

images:
  # The image built will be stored in Artifact Registry with these tags
  - 'asia-south1-docker.pkg.dev/tnk-ai-modelling/tryon-repo/gemini-tryon-app:$COMMIT_SHA'
  - 'asia-south1-docker.pkg.dev/tnk-ai-modelling/tryon-repo/gemini-tryon-app:latest'

options:
  logging: CLOUD_LOGGING_ONLY